{"version":3,"sources":["Quote.js","Footer.js","App.js","index.js"],"names":["bgColorList","Quote","quotes","setBgColor","bgColor","getRandom","numb","Math","floor","random","firstQuote","useState","setNewQuote","id","className","style","fontSize","icon","faQuoteLeft","quote","faQuoteRight","author","onClick","console","log","href","target","faTwitterSquare","size","color","Footer","App","setQuotes","useEffect","axios","get","then","data","catch","err","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAMMA,EAAe,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAiChIC,EA/BD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAiBC,GAAiB,EAA1BC,QAA0B,EAAjBD,YAGxBE,EAAY,SAAAC,GAGd,OAFgBC,KAAKC,MAAMD,KAAKE,SAAWH,GAAQ,GAIjDI,EAAaR,EAAOG,EAAU,MARW,EASfM,mBAAS,CAACD,IATK,mBAS9BE,GAT8B,WAkB/C,OACI,oCAAGF,GACC,yBAAKG,GAAG,YAAYC,UAAU,aAC1B,uBAAGD,GAAG,OAAOE,MAAO,CAACC,SAAU,SAAS,kBAAC,IAAD,CAAiBC,KAAMC,IAAaJ,UAAU,cAAtF,IAAqGJ,EAAWS,MAAhH,IAAuH,kBAAC,IAAD,CAAiBF,KAAMG,IAAcN,UAAU,eACtK,uBAAGD,GAAG,SAASE,MAAO,CAACC,SAAU,SAAjC,KAA6CN,EAAWW,OAAxD,MACA,4BAAQR,GAAG,YAAYS,QAZf,WAChBC,QAAQC,IAAI,mBACZZ,EAAYV,EAAOG,EAAU,OAC7BF,EAAWH,EAAYK,EAAU,QASzB,oBACA,uBAAGoB,KAAI,gDAA2Cf,EAAWS,MAAtD,YAA+DT,EAAWW,QAAUK,OAAO,SAASb,GAAG,eAAc,kBAAC,IAAD,CAAiBI,KAAMU,IAAiBC,KAAK,KAAKC,MAAM,gBCrBrLC,EATA,WACX,OACI,yBAAKf,MAAO,CAACc,MAAO,UAChB,2DACA,mDC4BGE,MA3Bf,WAAgB,IAAD,EACepB,mBAAS,IADxB,mBACNT,EADM,KACE8B,EADF,OAEiBrB,mBAAS,CAAC,YAF3B,mBAENP,EAFM,KAEGD,EAFH,KAYb,OATA8B,qBAAU,WACRC,IAAMC,IAAI,0IACTC,MAAK,SAAAC,GAEJL,EAAUK,EAAKA,KAAKnC,WAErBoC,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAI,iCACzB,IAGD,yBAAKV,UAAU,MAAMD,GAAG,YAAYE,MAAO,CAACyB,gBAAiBpC,IAC3D,4BAAQU,UAAU,cAChB,mDACA,sCAAW,2CAEZZ,EACG,kBAAC,EAAD,CAAOA,OAAQA,EAAQE,QAASA,EAASD,WAAYA,IACrD,oDAEJ,kBAAC,EAAD,QCxBNsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c60535b2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft, faQuoteRight } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons';\n\nconst bgColorList =  ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\n\nconst Quote = ({ quotes, bgColor, setBgColor }) => {\n    // console.log(quotes)\n    \n    const getRandom = numb => {\n        let randomNum = Math.floor(Math.random() * numb) + 1  \n        // console.log('inside getRandom', randomNum);\n        return randomNum\n    }\n    const firstQuote = quotes[getRandom(102)]\n    const [newQuote, setNewQuote] = useState([firstQuote]);\n    \n    const getNewQuote = () => {\n        console.log('button clicked!')\n        setNewQuote(quotes[getRandom(102)])\n        setBgColor(bgColorList[getRandom(11)])\n    }\n    \n\n    return (\n        <>{firstQuote && \n            <div id=\"inner-box\" className=\"inner-box\" >\n                <p id=\"text\" style={{fontSize: \"30px\"}}><FontAwesomeIcon icon={faQuoteLeft} className=\"iconspace\"/> {firstQuote.quote} <FontAwesomeIcon icon={faQuoteRight} className=\"iconspace\"/></p>\n                <p id=\"author\" style={{fontSize: \"20px\"}}>- {firstQuote.author} -</p>\n                <button id=\"new-quote\" onClick={getNewQuote}>Get a new quote!</button>\n                <a href={`https://twitter.com/intent/tweet?text=${firstQuote.quote} ${firstQuote.author}`} target='_blank' id=\"tweet-quote\"><FontAwesomeIcon icon={faTwitterSquare} size=\"2x\" color=\"#00acee\" /></a>\n            </div>\n        }\n        </>\n    )\n}\n\nexport default Quote","import React from \"react\";\n\nconst Footer = () => {\n    return(\n        <div style={{color: \"white\"}}>\n            <p>Email me: areumjo1@gmail.com</p>\n            <p>Â© 2020 Areum Jo</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Quote from './Quote';\nimport Footer from './Footer';\n\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n  const [bgColor, setBgColor] = useState(['#16a085']);\n  useEffect(() => {\n    axios.get('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n    .then(data => {\n      // console.log(data.data.quots)\n      setQuotes(data.data.quotes)\n    })\n    .catch(err => console.log('Error fetching json data'))\n  }, [])\n\n  return (\n    <div className=\"App\" id=\"quote-box\" style={{backgroundColor: bgColor}}>\n      <header className=\"App-header\">\n        <p>Random Quote Machine</p>\n        <p>to your <code>Twitter</code></p>\n      </header>\n      {quotes ? \n          <Quote quotes={quotes} bgColor={bgColor} setBgColor={setBgColor} />\n        : <p>Loading your quote...</p>\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}